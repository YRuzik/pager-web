// @generated by protobuf-ts 2.9.3 with parameter generate_dependencies,keep_enum_prefix
// @generated from protobuf file "chat/chat_actions.proto" (package "com.pager.api", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ChatActions } from "./chat_actions";
import type { Empty } from "../common/common";
import type { ChatMessage } from "./chat_actions";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { Chat } from "./chat_actions";
import type { CreateChatRequest } from "./chat_actions";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service com.pager.api.ChatActions
 */
export interface IChatActionsClient {
    /**
     * @generated from protobuf rpc: CreateChat(com.pager.api.CreateChatRequest) returns (com.pager.api.Chat);
     */
    createChat(input: CreateChatRequest, options?: RpcOptions): UnaryCall<CreateChatRequest, Chat>;
    /**
     * @generated from protobuf rpc: SendMessage(com.pager.api.ChatMessage) returns (com.pager.api.Empty);
     */
    sendMessage(input: ChatMessage, options?: RpcOptions): UnaryCall<ChatMessage, Empty>;
}
/**
 * @generated from protobuf service com.pager.api.ChatActions
 */
export class ChatActionsClient implements IChatActionsClient, ServiceInfo {
    typeName = ChatActions.typeName;
    methods = ChatActions.methods;
    options = ChatActions.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: CreateChat(com.pager.api.CreateChatRequest) returns (com.pager.api.Chat);
     */
    createChat(input: CreateChatRequest, options?: RpcOptions): UnaryCall<CreateChatRequest, Chat> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateChatRequest, Chat>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SendMessage(com.pager.api.ChatMessage) returns (com.pager.api.Empty);
     */
    sendMessage(input: ChatMessage, options?: RpcOptions): UnaryCall<ChatMessage, Empty> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<ChatMessage, Empty>("unary", this._transport, method, opt, input);
    }
}
