// @generated by protobuf-ts 2.9.3 with parameter generate_dependencies,keep_enum_prefix
// @generated from protobuf file "common/common.proto" (package "com.pager.api", syntax proto3)
// tslint:disable
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message com.pager.api.Empty
 */
export interface Empty {
}
/**
 * @generated from protobuf message com.pager.api.PagerProfile
 */
export interface PagerProfile {
    /**
     * @generated from protobuf field: string user_id = 1;
     */
    userId: string; // Индетификатор пользователя
    /**
     * @generated from protobuf field: string email = 2;
     */
    email: string; // Почта пользователя
    /**
     * @generated from protobuf field: bytes avatar = 3;
     */
    avatar: Uint8Array; // Картинка профиля пользователя
    /**
     * @generated from protobuf field: string login = 4;
     */
    login: string; // Логин пользователя
    /**
     * @generated from protobuf field: bool online = 5;
     */
    online: boolean; // Пользователь в сети или нет
}
// @generated message type with reflection information, may provide speed optimized methods
class Empty$Type extends MessageType<Empty> {
    constructor() {
        super("com.pager.api.Empty", []);
    }
    create(value?: PartialMessage<Empty>): Empty {
        const message = globalThis.Object.create((this.messagePrototype!));
        if (value !== undefined)
            reflectionMergePartial<Empty>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Empty): Empty {
        return target ?? this.create();
    }
    internalBinaryWrite(message: Empty, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.pager.api.Empty
 */
export const Empty = new Empty$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PagerProfile$Type extends MessageType<PagerProfile> {
    constructor() {
        super("com.pager.api.PagerProfile", [
            { no: 1, name: "user_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "email", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "avatar", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 4, name: "login", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "online", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<PagerProfile>): PagerProfile {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.userId = "";
        message.email = "";
        message.avatar = new Uint8Array(0);
        message.login = "";
        message.online = false;
        if (value !== undefined)
            reflectionMergePartial<PagerProfile>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PagerProfile): PagerProfile {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string user_id */ 1:
                    message.userId = reader.string();
                    break;
                case /* string email */ 2:
                    message.email = reader.string();
                    break;
                case /* bytes avatar */ 3:
                    message.avatar = reader.bytes();
                    break;
                case /* string login */ 4:
                    message.login = reader.string();
                    break;
                case /* bool online */ 5:
                    message.online = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PagerProfile, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string user_id = 1; */
        if (message.userId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.userId);
        /* string email = 2; */
        if (message.email !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.email);
        /* bytes avatar = 3; */
        if (message.avatar.length)
            writer.tag(3, WireType.LengthDelimited).bytes(message.avatar);
        /* string login = 4; */
        if (message.login !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.login);
        /* bool online = 5; */
        if (message.online !== false)
            writer.tag(5, WireType.Varint).bool(message.online);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.pager.api.PagerProfile
 */
export const PagerProfile = new PagerProfile$Type();
